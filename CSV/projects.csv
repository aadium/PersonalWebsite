ProjectName,ProjectType,Description,CodeLink,ImageURL,ProjectID,ButtonName,SecondCodeLink,SecondButtonName
"Temperature and Humidity Monitoring","Python + AWS + Grafana IoT Application","Developed an IoT application that uploaded the simulated temperature and humidity data to the InfluxDB 2.0 database stored on an AWS EC2 instance.[newline]Used Python to simulate and upload the data.[newline]On the EC2 instance, wrote a shell script that would run all the python scripts for data simulaton and upload. Also used a cron job to run the shell script after a given time interval to automate the data upload.[newline]Installed Grafana on the EC2 instance and created a dashboard to visualize the data.","https://github.com/aadium/temp-humidity-iot-project","../images/projects/temp_hum.png","project1",View Code
"Object Detection using Machine Learning","Python Object Detection Application","Developed an application using Python to detect grapes and draw bounding boxes in the webcam's live feed.[newline]Created a dataset on Roboflow, and used the YOLOv3 architecture to train a model, which acheived an 86.3% precision, with a 86.5% mAP. Also trained a YOLOv5 model, which had the same performance ratings, but was faster and lighter.","https://github.com/aadium/grape-detect","../images/projects/objectdetection.png","project2",View Code (YOLOv3),"https://github.com/aadium/grape_detect_yv5",View Code (YOLOv5)
"Employee Management System","Java Dynamic Web Application","Developed a Dynamic Web Application that can add, delete, and view a specific or all employees.[newline]Used HTML and CSS to design the webpages, Java to develop the servlets, and MySQL for storing the employee data.[newline]The application runs on Apache Tomcat 9.0","https://github.com/aadium/Employee-management-webapp","../images/projects/ems.png","project3",View Code
"Parking Management System","Python Application","Developed an application that manages the entry and exit of vehicles from a parking lot.[newline]Used Tkinter to develop the GUIs that accepts user input. Developed 2 GUIs, one for the entry gate, and one for the exit gate.[newline]The application accomodates vehicles of 3 types: 2-wheelers, 4-wheelers, and trucks. Each one of these has different daily, weekly, and monthly charges. The parkings for each of these types are separate, and some of these are also reserved for handicapped drivers.[newline]While entering, the number plate is recorded using an object detection model. The user has the ability to correct this.[newline]The system automatically assigns a parking to the user based on the vehicle type and the occupied parkings.[newline]While exiting, the bill can be paid by cash, card, or by UPI.[newline]Used MySQL for storing user data, and vacant parkings.","https://github.com/aadium/parking-system","../images/projects/parking.png","project3",View Code
"Wheelchair Exercise Tracker","Product Development Group Project","Designed a solution that enabled wheelchair users to receive an improved quality of exercise.[newline]The design process was grounded in various aspects of biomedical design, starting from problem identification to prototype presentation. Utilized a range of technical skills, including SolidWorks and C++, which were used for making the prototype design and data encryption, respectively. In addition, machine shop skills were utilized for the fabrication of the prototype.[newline]Also used MS Office for the presentations and reports, which helped to effectively communicate the design and its features. As part of the design process, I created a visual abstract using Canva, which effectively communicated the project's key features in a visually appealing way.","../documents/WhPrR.pdf","../images/projects/wheelchair.png","project3",View Report
"B-Mode","C++ Imaging Project","Developed a C++ code to generate a 2D image using input data from an ultrasound scanner.[newline]Applied several programming concepts such as classes, functions, and linked lists. Object-oriented programming (OOP) was utilized in the design and implementation of the code.[newline]Engaged in multiple iterations of testing and debugging to guarantee that the code was error-free and producing the desired output. The final results were satisfying and aligned with the project objectives.","https://github.com/aadium/B-Mode-Beamforming","../images/projects/bmode.png","project4",View Code